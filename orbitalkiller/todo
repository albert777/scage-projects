done при рисовании рамки в режиме карты писать длину ширину рамки

вычислять орбиты в action раз в n секунд используя actionDynamicPeriod - в зависимости от ускорения времени

done использовать change-функцию чтобы останавливать ротацию полностью, если она ниже определенного предела

done при рисовании траектории на неделю использовать алгоритм уменьшения количества точек - оставлять только точки, которые отклоняются на значительный
угол, длинные линии кучей точек не рисовать

done уменьшить maxMultiplier эмпирически, чтобы орбита менялась незначительно хотя бы за неделю 6151

done писать steps в интерфейсе

done рисовать красным все работающие двиги в интерфейсе

done в интерфейсе писать в процентах вклад сил приятежния небесных тел

done режим отображения без следования за ротацией корабля, чтобы оси координат были неподвижны и ориентированы стандартно

done скорость относительно небесных тел вычисляется неверно, это видно на глаз: пишет что скорость больше одного километра в секунду, но расстояние
до небесного тела меняется явно медленнее чем на километр в секунду

фича в режиме карты: ткнуть в любую точку орбиты корабля и когда он ее достигнет, игра встанет на паузу,
ускорение времени будет сброшено до единицы.

подобрать интервал обновления орбит чтобы не дергалось так при ускорениях времени, чтобы типа интервал был функция от ускорения времени

* отключать полностью рендеринг при большом ускорении времени.

done Подсчитывать "эффективное ускорение времени" - сколько реально с учетом фпс удается посчитать тактов в секунду

done сохранение/загрузка

done писать "КА на таком-то расстоянии, относительная скорость такая-то" если расстояние меньше 50 км и есть возможность уравнять орбиты

режим расчета недельной траектории без обновления - по клавише

попробовать при сравнении скорости корабля с  первой-второй космическими использовать проекцию скорости на перпендикуляр к направлению на планету.

cancel расчет первой-второй космической скорости относительно гипотетического тела - суперпозиции оказывающих влияние небесных тел

done Может ли корабль крутится в другую сторону?

* Параметры орбиты - писать в соответствии с тем, что рисуем

В режиме карты режим рисования: центрировать на объекте-центре орбиты (если он есть)

* Полетный режим - полностью остановиться

Режим расчета орбиты - расчет на неделю, плюс возможность обновления

Попробовать посчитать ошибку измерения с разными коэффициентами ускорения

done писать в двигателях вместо тактов время работы

done писать какие перегрузки испытает/испытывает космонавт

done если двигательная установка не работает, скрывать панель с двигателями и запланированными скоростями

* рисовать на планетах горы чтобы было видно движение корабля вдоль поверхности

* полетный режим - остановка относительно планеты

* физический движок: resting points, остановка двух тел при соприкосновении

* в режиме карты рисовать нулевой меридиан и вращать его в соответствии с вращением планеты

* писать скорость спутника/убегания только для небесного тела в сфере тяготения которого находимся

продлевать гиперболические орбиты нужным образом

рисовать параболическую орбиту

в режиме карты аналогично обычному режиму от корабля рисовать стрелку с указанием расстояния

апдейт орбиты алогоритм более умный

размеры и форма кораблей - сделать меньших размеров

* разобраться в отличиях absDeg, signedDeg, mydeg (deg360)
* синхронизация с планетой - не только вертикальная скорость но и горизонтальная!
* новые модели корабля и станции
* переписать коллизии на double

интерфейс: раскрывающиеся менюшки, которые можно перемещать по экрану и скрывать
* скрытие элементов интерфейса по клику

* постоянная вертикальная и горизонтальная скорости

* перегрузка при столкновении
* сохранять информацию о коллизиях
* подсчитывать среднюю перегрузку за секунду

* запас топлива. топливо кончается, но оч медленно, типа оно оч эффективное

* уменьшение топлива меняет массу корабля

* синхронизация орбит, встреча на орбите

* немного неверные расчеты будущей траектории

* мощность писать в килоньютонах

гиперболическая орбита - определять, приближаемся к минимуму или нет
эллиптическая орбита - определять, по часовой стрелке движемся или против
полная орбитальная математика - через сколько будем в такой-то точке итд

оптимизация рендеринга: то, что может меняться только после отработки физ движка вычислять раз в такт и сохранять, и в рендере просто показывать.
Сейчас некоторые вещи там вычисляются каждый раз, что замедляет рендеринг

Солнечная сторона/тень

Тела из нескольких форм, чтобы можно было невыпуклые многоугольники

cancel Расчет будущих значений по формулам

обратный отсчет до потери сознания пилота при высоких перегрузках, чем выше, тем быстрее

период реабилитации после перегрузки

пилот умирает если перегрузка превысила некоторое значение (100g), теряет сознание и потом умирает, если перегрузка долго держится высокой

пилоту нужно есть

пилоту нужно спать

пилоту нужно ходить в туалет. выбрасываемые за борт отходы уменьшают массу корабля

запас еды

поплнение запасов топлива и еды

когда пилот спит или потерял сознание, управлять кораблем нельзя

получение энергии от солнечных батарей. Необходимость ориентировать корабль, чтобы зарядить аккумуляторы

стыковка со станциями

стрельба ракетами.

посадка на планету в определенной точке